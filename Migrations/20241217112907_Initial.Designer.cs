// <auto-generated />
using HODPoc.DBContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace HODPoc.Migrations
{
    [DbContext(typeof(HODContext))]
    [Migration("20241217112907_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("HODPoc.Models.Entities.Hod", b =>
                {
                    b.Property<string>("hodId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("hodName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("role")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("school")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("hodId");

                    b.ToTable("Hod7");
                });

            modelBuilder.Entity("HODPoc.Models.Entities.Login", b =>
                {
                    b.Property<string>("username")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("username");

                    b.ToTable("logins");
                });

            modelBuilder.Entity("HODPoc.Models.Entities.Student", b =>
                {
                    b.Property<string>("sId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("TeachertId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("add")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("age")
                        .HasColumnType("int");

                    b.Property<string>("hodId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("sclass")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("sname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("sId");

                    b.HasIndex("TeachertId");

                    b.HasIndex("hodId");

                    b.ToTable("HodStudent7");
                });

            modelBuilder.Entity("HODPoc.Models.Entities.Subject", b =>
                {
                    b.Property<string>("suId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("TeachertId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("english")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("hindi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("hodId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("maths")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("science")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("social")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("telugu")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("suId");

                    b.HasIndex("TeachertId");

                    b.HasIndex("hodId");

                    b.ToTable("Subject7");
                });

            modelBuilder.Entity("HODPoc.Models.Entities.Teacher", b =>
                {
                    b.Property<string>("tId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("age")
                        .HasColumnType("int");

                    b.Property<string>("classes")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("hodId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("role")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("tName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("tId");

                    b.HasIndex("hodId");

                    b.ToTable("Teacher7");
                });

            modelBuilder.Entity("StudentSubject", b =>
                {
                    b.Property<string>("SubjectssuId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("studentssId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("SubjectssuId", "studentssId");

                    b.HasIndex("studentssId");

                    b.ToTable("StudentSubject");
                });

            modelBuilder.Entity("HODPoc.Models.Entities.Student", b =>
                {
                    b.HasOne("HODPoc.Models.Entities.Teacher", null)
                        .WithMany("Students")
                        .HasForeignKey("TeachertId");

                    b.HasOne("HODPoc.Models.Entities.Hod", null)
                        .WithMany("Students")
                        .HasForeignKey("hodId");
                });

            modelBuilder.Entity("HODPoc.Models.Entities.Subject", b =>
                {
                    b.HasOne("HODPoc.Models.Entities.Teacher", "Teacher")
                        .WithMany("Subjects")
                        .HasForeignKey("TeachertId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HODPoc.Models.Entities.Hod", null)
                        .WithMany("Subjects")
                        .HasForeignKey("hodId");

                    b.Navigation("Teacher");
                });

            modelBuilder.Entity("HODPoc.Models.Entities.Teacher", b =>
                {
                    b.HasOne("HODPoc.Models.Entities.Hod", null)
                        .WithMany("Teachers")
                        .HasForeignKey("hodId");
                });

            modelBuilder.Entity("StudentSubject", b =>
                {
                    b.HasOne("HODPoc.Models.Entities.Subject", null)
                        .WithMany()
                        .HasForeignKey("SubjectssuId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HODPoc.Models.Entities.Student", null)
                        .WithMany()
                        .HasForeignKey("studentssId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("HODPoc.Models.Entities.Hod", b =>
                {
                    b.Navigation("Students");

                    b.Navigation("Subjects");

                    b.Navigation("Teachers");
                });

            modelBuilder.Entity("HODPoc.Models.Entities.Teacher", b =>
                {
                    b.Navigation("Students");

                    b.Navigation("Subjects");
                });
#pragma warning restore 612, 618
        }
    }
}
